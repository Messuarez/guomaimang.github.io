import{_ as e,f as t}from"./app.fd696f43.js";const o={},i=t('<h1 id="memory-in-os" tabindex="-1"><a class="header-anchor" href="#memory-in-os" aria-hidden="true">#</a> Memory in OS</h1><p>A program <strong>must be brought from disk into main memory</strong> and <strong>loaded within a process for it to be run</strong>.</p><ul><li>Executable code (compiled) or source code (interpreted).</li><li>Recall that <strong>a process is a program in execution.</strong></li></ul><p><strong>Main memory/registers are storage that CPU can directly access.</strong></p><ul><li>A register can be accessed in one CPU clock cycle.</li><li>A main memory access can take many cycles.</li><li>Cache sits between main memory and CPU registers to improve memory access time.</li></ul><h2 id="address-binding-to-memory" tabindex="-1"><a class="header-anchor" href="#address-binding-to-memory" aria-hidden="true">#</a> Address Binding to Memory</h2><p>\u7ED1\u5B9A\u5730\u5740\u662F\u6307\u5728<strong>\u7A0B\u5E8F\u8FD0\u884C\u65F6</strong>\u5C06<strong>\u7F16\u8BD1\u540E</strong>\u7684<strong>\u7A0B\u5E8F\u4EE3\u7801\u4E2D\u7684\u5730\u5740\u8F6C\u5316\u4E3A\u5185\u5B58\u5730\u5740</strong>\u7684\u8FC7\u7A0B\u3002</p><p>Address binding of instructions and data to memory can <strong>happen</strong> at <strong>three</strong> different stages.</p><p>\u7F16\u8BD1\u65F6\u95F4</p><ul><li>\u5982\u679C\u5185\u5B58\u4F4D\u7F6E\u63D0\u524D\u77E5\u9053\uFF0C\u53EF\u4EE5\u751F\u6210\u7EDD\u5BF9\u4EE3\u7801\u3002</li><li>\u5982\u679C\u8D77\u59CB\u4F4D\u7F6E\u53D1\u751F\u53D8\u5316\uFF0C\u5FC5\u987B\u91CD\u65B0\u7F16\u8BD1\u4EE3\u7801\u3002</li></ul><p>\u52A0\u8F7D\u65F6\u95F4</p><ul><li>\u5982\u679C\u5185\u5B58\u4F4D\u7F6E\u5728\u7F16\u8BD1\u65F6\u4E0D\u77E5\u9053\uFF0C<strong>\u5FC5\u987B\u751F\u6210\u53EF\u91CD\u5B9A\u4F4D\u7684\u4EE3\u7801</strong>\u3002</li><li>\u5730\u5740\u5728<strong>\u7A0B\u5E8F\u52A0\u8F7D\u540E\u5B9A\u4E49</strong>\u3002</li></ul><p>The logical and physical addresses are the same in both compile-time and load-time address-binding schemes, but the logical and physical addresses differ in run-time address-binding scheme.</p><p>\u6267\u884C\u6216\u8FD0\u884C\u65F6\u95F4</p><ul><li>\u5982\u679C\u8FDB\u7A0B\u5728\u6267\u884C\u8FC7\u7A0B\u4E2D\u53EF\u4EE5\u4ECE\u4E00\u4E2A\u5185\u5B58\u6BB5\u79FB\u52A8\u5230\u53E6\u4E00\u4E2A\uFF0C\u5FC5\u987B\u63A8\u8FDF\u5230\u8FD0\u884C\u65F6\u95F4\u8FDB\u884C\u7ED1\u5B9A\u3002</li><li>\u9700\u8981\u786C\u4EF6\u652F\u6301<strong>\u52A8\u6001\u5730\u5740\u6620\u5C04</strong>\uFF08base and limit registers\uFF09\u3002</li></ul><p>Only the translation from virtual to physical address needs to be changed when a program moves around.</p><p><img src="https://pic.hanjiaming.com.cn/2022/03/14/b1e63bb98b997.png" alt="CleanShot 2022-03-14 at 16.18.49@2x.png" loading="lazy"></p><h2 id="logical-and-physical-address" tabindex="-1"><a class="header-anchor" href="#logical-and-physical-address" aria-hidden="true">#</a> Logical and Physical Address</h2><p>\u5185\u5B58\u7BA1\u7406\u6280\u672F\u9700\u8981\u652F\u6301\u8FD0\u884C\u65F6\u7684\u5730\u5740\u7ED1\u5B9A\u3002\u8FD9\u662F\u56E0\u4E3A\u7A0B\u5E8F\u5728\u6267\u884C\u8FC7\u7A0B\u4E2D\u53EF\u80FD\u4F1A\u56DB\u5904\u79FB\u52A8\u3002</p><p>\u5185\u5B58\u7BA1\u7406\u7684\u5173\u952E\u601D\u60F3\u662F\u903B\u8F91\u5730\u5740\u548C\u7269\u7406\u5730\u5740\u7684\u5206\u79BB\u3002</p><p>\u903B\u8F91\u5730\u5740\u662F\u7531CPU\u751F\u6210\u7684\u5730\u5740\uFF0C\u4F8B\u5982\uFF0C\u4E00\u6761\u6307\u4EE4\u6307\u7684\u662F\u5B58\u50A8\u5728\u67D0\u4E2A\u7279\u5B9A\u5730\u5740\u7684\u6574\u6570\u3002\u5F53\u5B83\u4E0E\u7269\u7406\u5730\u5740\u4E0D\u540C\u65F6\uFF0C\u8FD9\u4E5F\u88AB\u79F0\u4E3A\u865A\u62DF\u5730\u5740\u3002</p><p>\u7269\u7406\u5730\u5740\u662F\u88AB\u4E3B\u5B58\u50A8\u5668\u53D1\u9001\u7684\u5730\u5740\u3002</p><h2 id="memory-management-unit" tabindex="-1"><a class="header-anchor" href="#memory-management-unit" aria-hidden="true">#</a> Memory Management Unit</h2><p>\u6BCF\u4E2A\u865A\u62DF\u5730\u5740<strong>\u5FC5\u987B\u88AB\u6620\u5C04\u6216\u7FFB\u8BD1\u6210\u8FD0\u884C\u65F6\u7ED1\u5B9A\u65B9\u6848\u4E2D\u7684\u7269\u7406\u5730\u5740</strong>\uFF0C\u8FD9\u5728\u83B7\u53D6<strong>\u6307\u4EE4</strong>\u548C\u83B7\u53D6<strong>\u6BCF\u4E2A\u64CD\u4F5C\u6570</strong>\u65F6\u53D1\u751F\u4E00\u6B21\u3002</p><p>\u8FD9\u79CD\u8F6C\u6362\u5FC5\u987B\u662F<strong>\u975E\u5E38\u5FEB\u901F\u548C\u6709\u6548</strong>\u7684\uFF0C\u6240\u4EE5\u5B83\u5FC5\u987B\u7531<strong>\u786C\u4EF6</strong>\u5B8C\u6210\u3002 \u5C06\u865A\u62DF\u5730\u5740\u6620\u5C04\u5230\u7269\u7406\u5730\u5740\u7684\u786C\u4EF6\u8BBE\u5907\u88AB\u79F0\u4E3A\u5185\u5B58\u7BA1\u7406\u5355\u5143\u6216MMU\u3002</p><p>User process only deals with logical addresses. It <strong>never sees the real physical addresses</strong>.</p><p>In the simplest MMU solution, the value in a <strong>special relocation register</strong> is added to every logical address generated by a user process to form the physical address when it is sent to memory. <strong>The relocation register is like the base register</strong>.\u300C\u5728\u6700\u7B80\u5355\u7684MMU\u89E3\u51B3\u65B9\u6848\u4E2D\uFF0C\u4E00\u4E2A\u7279\u6B8A\u7684\u91CD\u5B9A\u4F4D\u5BC4\u5B58\u5668\u4E2D\u7684\u503C\u88AB\u6DFB\u52A0\u5230\u6BCF\u4E2A\u7531\u7528\u6237\u8FDB\u7A0B\u4EA7\u751F\u7684\u903B\u8F91\u5730\u5740\u4E2D\uFF0C\u5F53\u5B83\u88AB\u53D1\u9001\u5230\u5185\u5B58\u65F6\uFF0C\u5F62\u6210\u7269\u7406\u5730\u5740\u3002\u91CD\u5B9A\u4F4D\u5BC4\u5B58\u5668\u5C31\u50CF\u57FA\u7840\u5BC4\u5B58\u5668\u4E00\u6837\u3002\u300D</p><p><img src="https://pic.hanjiaming.com.cn/2022/03/14/b1e63bb98b997.png" alt="CleanShot 2022-03-14 at 16.18.49@2x.png" loading="lazy"></p><h2 id="memory-allocation" tabindex="-1"><a class="header-anchor" href="#memory-allocation" aria-hidden="true">#</a> Memory Allocation</h2><p>Main memory is usually divided into two partitions.</p><ul><li>Resident OS is usually stored <strong>in low memory</strong>, together with <strong>interrupt vector and interrupt handlers</strong>.</li><li>User processes are stored in <strong>high memory</strong>.</li></ul><p>Memory allocation is concerned with\u300C\u88AB\u6D89\u53CA\u5230\u300D <strong>where a user process is actually placed when it is swapped/moved into main memory.</strong></p><img src="https://pic.hanjiaming.com.cn/2022/03/14/00a913fe33b55.png" alt="1647249842197.png" style="zoom:50%;"><p>We assume that the whole process will be stored in the main memory for it to be executed.</p><h3 id="contiguous-allocation" tabindex="-1"><a class="header-anchor" href="#contiguous-allocation" aria-hidden="true">#</a> Contiguous Allocation</h3><p><strong>Contiguous allocation</strong>: allocate a single block of memory of size sufficient to hold the process. \u300C\u8FDE\u7EED\u5206\u914D\uFF1A\u5206\u914D\u4E00\u4E2A\u5927\u5C0F\u7684\u5355\u4E2A\u5185\u5B58\u5757\uFF0C\u8DB3\u4EE5\u4FDD\u6301\u8BE5\u8FC7\u7A0B\u3002\u300D</p><p>The most straightforward solution is to allocate a single block of memory to hold a process. This is called contiguous allocation.</p><ul><li>One single block to hold one process (single partition).</li><li>Multiple blocks to hold multiple processes (multiple partition).</li></ul><p>A pair of registers are used to protect user processes from accidentally stepping into each other and changing operating system code and data.</p><ul><li>The relocation register contains the value of smallest physical address for the process.</li><li>The limit register contains the range (size) of logical address space.</li><li>Each logical address must be less than the limit register.</li><li>MMU maps logical address dynamically into physical address by adding it to the relocation register.</li></ul><p><img src="https://pic.hanjiaming.com.cn/2022/03/14/72fa1db79299d.png" alt="1647250278330.png" loading="lazy"></p><p><strong>Non-contiguous allocation</strong>: <strong>chop up the process and allocate multiple blocks of memory</strong> to hold the process. The two major schemes are <strong>paging</strong> and <strong>segmentation</strong>.</p><h4 id="multiple-fixed-partition-method" tabindex="-1"><a class="header-anchor" href="#multiple-fixed-partition-method" aria-hidden="true">#</a> Multiple fixed partition method</h4><p>\u56DB\u5341\u5E74\u524D\uFF0C\u6700\u65E9\u7684\u3001\u7ECF\u5178\u7684\u64CD\u4F5C\u7CFB\u7EDF\u4E4B\u4E00IBM MVS\u5C31\u4F7F\u7528\u4E86\u8FD9\u4E2A\u65B9\u6CD5\u3002</p><ul><li>Called MFT: <strong>M</strong>ultiprogramming with a <strong>F</strong>ixed number of <strong>T</strong>asks.</li><li>Divide the memory into several partitions.</li><li>When a partition is free, a job is selected to be loaded into the partition.</li><li>Only at most n jobs can be executed if there are n partitions.</li><li>Very simple to manage.</li><li>\u5982\u679C\u6709\u8BB8\u591A\u5C0F\u5DE5\u4F5C\uFF0C\u5C31\u4E0D\u592A\u6709\u6548\uFF0C\u56E0\u4E3A\u8BB8\u591A\u5206\u533A\u53EA\u88AB\u4F7F\u7528\u5230\u975E\u5E38\u5C0F\u7684\u7A0B\u5EA6\uFF0C\u603B\u7684\u53EF\u7528\u5185\u5B58\u4ECD\u7136\u76F8\u5F53\u5927\u3002</li></ul><h4 id="multiple-variable-partition-method" tabindex="-1"><a class="header-anchor" href="#multiple-variable-partition-method" aria-hidden="true">#</a> Multiple variable partition method</h4><p>Commonly used in <strong>IBM MVS</strong>.</p><ul><li>Called MVT: <strong>M</strong>ultiprogramming with a <strong>V</strong>ariable number of <strong>T</strong>asks.</li><li>A block of available memory is called a <strong>hole</strong>.</li><li>\u4E0D\u540C\u5927\u5C0F\u7684\u5B54\u6563\u5E03\u5728\u6574\u4E2A\u5B58\u50A8\u5668\u4E2D\u3002\u300CHoles of various size are scattered throughout the memory. \u300D</li><li><strong>\u5F53\u4E00\u4E2A\u8FDB\u7A0B\u5230\u8FBE\u65F6\uFF0C\u5B83\u88AB\u4ECE\u4E00\u4E2A\u8DB3\u591F\u5927\u7684\u6D1E\u4E2D\u5206\u914D\u5185\u5B58\uFF0C\u4EE5\u5BB9\u7EB3\u5B83\u3002</strong>\u300CWhen a process arrives, it is allocated memory from a hole large enough to accommodate it. \u300D</li><li>OS maintains information about <strong>allocated partitions</strong> and <strong>free partitions</strong> (i.e. holes), often <strong>in the form of linked lists</strong>.</li></ul><p><img src="https://pic.hanjiaming.com.cn/2022/03/14/5c37061bdf300.png" alt="1647251902894.png" loading="lazy"></p><p><img src="https://pic.hanjiaming.com.cn/2022/03/14/2648aee2ad1fe.png" alt="1647252039959.png" loading="lazy"></p><p><img src="https://pic.hanjiaming.com.cn/2022/03/14/de655d2a0d4d0.png" alt="1647252084644.png" loading="lazy"></p>',51);function a(s,r){return i}var l=e(o,[["render",a]]);export{l as default};
