import{_ as i,f as e}from"./app.33d75dfd.js";const t={},a=e('<h1 id="combinational-logic-2" tabindex="-1"><a class="header-anchor" href="#combinational-logic-2" aria-hidden="true">#</a> Combinational Logic 2</h1><h2 id="logica-gates" tabindex="-1"><a class="header-anchor" href="#logica-gates" aria-hidden="true">#</a> logica gates</h2><p>logica gates \u300C\u903B\u8F91\u95E8\u300D</p><h3 id="basic-logic-gates" tabindex="-1"><a class="header-anchor" href="#basic-logic-gates" aria-hidden="true">#</a> Basic Logic Gates</h3><ul><li>Each gate is defined in three ways: graphical symbol, algebraic notation, and truth table\u300C\u56FE\u5F62\u7B26\u53F7\uFF0C\u4EE3\u6570\u7B26\u53F7\u548C\u771F\u503C\u8868\u300D</li><li>Each gate has two inputs (NOT has only one) and one single output; it can be easily extended to multiple inputs.\u300C\u6BCF\u4E2A\u95E8\u6709\u4E24\u4E2A\u8F93\u5165\uFF08\u4E0D\u53EA\u6709\u4E00\u4E2A\uFF09\u548C\u4E00\u4E2A\u5355\u8F93\u51FA\u3002\u5B83\u53EF\u4EE5\u8F7B\u677E\u6269\u5C55\u5230\u591A\u4E2A\u8F93\u5165\u3002\u300D</li><li>note the different shapes, the \u201Clittle bubble\u201D for NOT gate\u300C\u6CE8\u610F\u4E0D\u540C\u7684\u5F62\u72B6\uFF0C\u201C\u975E\u95E8\u201D\u7684\u201C\u5C0F\u6C14\u6CE1\u201D\u300D</li><li>XOR is also very useful\u300C\u5F02\u6216 \u4E5F \u975E\u5E38\u6709\u7528\u300D</li></ul><img src="https://pic.hanjiaming.com.cn/2021/03/21/2ce86d2572701.png" alt="image.png" title="image.png"><p>\u8BB0\u5FC6\uFF1A\u76F4\u7684\u662F\u4E14\uFF0C\u5F2F\u7684\u662F\u6216\uFF1BXOR\u8981A\u4E0EB\u7684\u4FE1\u53F7\u4E0D\u540C\u65F6\u624D\u884C\uFF1B</p><p><strong>A gate is the fundamental building block of all digital logic circuits</strong></p><ul><li>itself is a electronic circuit, producing an output signal that is a simple Boolean operation on its input signals\u300C\u5B83\u672C\u8EAB\u662F\u4E00\u4E2A\u7535\u5B50\u7535\u8DEF\uFF0C\u4EA7\u751F\u4E00\u4E2A\u8F93\u51FA\u4FE1\u53F7\uFF0C\u8BE5\u8F93\u51FA\u4FE1\u53F7\u5BF9\u5176\u8F93\u5165\u4FE1\u53F7\u8FDB\u884C\u7B80\u5355\u7684\u5E03\u5C14\u8FD0\u7B97\u300D</li><li>Gate delay: when one input value changes, the correct output signal appears almost instantaneously, delayed only by the propagation time of signals through the gate\u300C\u95E8\u5EF6\u8FDF\uFF1A\u5F53\u4E00\u4E2A\u8F93\u5165\u503C\u6539\u53D8\u65F6\uFF0C\u6B63\u786E\u7684\u8F93\u51FA\u4FE1\u53F7\u51E0\u4E4E\u7ACB\u5373\u51FA\u73B0\uFF0C\u4EC5\u5EF6\u8FDF\u53D1\u751F\u5728\u901A\u8FC7\u95E8\u7684\u4F20\u64AD\u65F6\u95F4\u300D</li></ul><h3 id="circuit" tabindex="-1"><a class="header-anchor" href="#circuit" aria-hidden="true">#</a> Circuit</h3><p><strong>Interconnections of Gates \u2014 Circuit</strong></p><p>Example: use NAND gate to implement NOT, AND, and OR</p><img src="https://pic.hanjiaming.com.cn/2021/03/21/dec64e73b7bd6.png" alt="image.png" title="image.png"><h4 id="representations" tabindex="-1"><a class="header-anchor" href="#representations" aria-hidden="true">#</a> Representations</h4><p>A circuit is a \u201Clarger gate\u201D: multiple inputs and a single output</p><ul><li>switching function (logical expression) Z = f(A, B, C,\u2026)</li><li>circuit (graphical/symbolic representation)</li><li>truth table</li></ul><p>know how to translate among these three representations \u2014 useful for implementation</p><h5 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h5><img src="https://pic.hanjiaming.com.cn/2021/03/21/105feaf657adb.png" alt="image.png" title="image.png"><p>\u6CE8\uFF1A\u7531\u8868\u8F6CSOP\u8BC6\u5F0F\u5B50\uFF0C\u53EA\u9700\u627E\u5230F\u4E3A1\u7684\u884C\u3002</p><h4 id="obtain-the-circuit" tabindex="-1"><a class="header-anchor" href="#obtain-the-circuit" aria-hidden="true">#</a> Obtain the circuit</h4><p>A very convenient way is to use \u201CSum of Product\u201D (SOP) form of a logical expression**\u300CSOP\u8868\u793A\u79EF\u7684\u548C\u300D**</p><ul><li>it\u2019s a sum of terms, where term is the product of inputs (or negation of inputs)\u300C\u5B83\u662F\u9879\u7684\u603B\u548C\uFF0C\u5176\u4E2D\u9879\u662F\u8F93\u5165\u7684\u4E58\u79EF\uFF08\u6216\u8F93\u5165\u7684\u53D6\u53CD\uFF09\u300D</li><li>it\u2019s easy to obtain the circuit from SOP</li></ul><img src="https://pic.hanjiaming.com.cn/2021/03/21/4a767f8e3742d.png" alt="image.png" title="image.png" width="400px"><h5 id="sop-to-circuit" tabindex="-1"><a class="header-anchor" href="#sop-to-circuit" aria-hidden="true">#</a> SOP to Circuit</h5><img src="https://pic.hanjiaming.com.cn/2021/03/21/c5def77946ef1.png" alt="image.png" title="image.png"><p>\u6CE8\uFF1AF\u524D\u7528\u6216\u8868\u793A\uFF0C\u524D\u9762\u5728\u518D\u7528\u56DB\u4E2A\u4E14\u8868\u793A\uFF1B\u5BF9\u4E8E\u8F93\u5165\u7535\u8DEFABC\uFF0C\u53EA\u9700\u6309\u7167\u662F\u5426\u53D6\u53CD\uFF0C\u63A5\u5165\u5373\u53EF\u3002</p><img src="https://pic.hanjiaming.com.cn/2021/03/29/34e9ad0506efc.png" alt="image.png" title="image.png"><h5 id="pos-to-circuit" tabindex="-1"><a class="header-anchor" href="#pos-to-circuit" aria-hidden="true">#</a> POS to Circuit</h5><img src="https://pic.hanjiaming.com.cn/2021/03/29/ae5a40e28cc31.png" alt="image.png" title="image.png"><h5 id="choose-what" tabindex="-1"><a class="header-anchor" href="#choose-what" aria-hidden="true">#</a> Choose What?</h5><ul><li>Intuition \u2014 for shorter expression\u300C\u7B80\u77ED\u8868\u8FBE\u300D <ul><li>less 1\u2019s in F \u2014 use SOP</li><li>less 0\u2019s in F \u2014 use POS</li></ul></li><li>however, shorter expression is not the only consideration when designing circuits, also consider the types of gates available</li></ul><h2 id="digital-components" tabindex="-1"><a class="header-anchor" href="#digital-components" aria-hidden="true">#</a> Digital Components</h2><p>Digital Components \u300C\u6570\u5B57\u539F\u4EF6\u300D</p><p>A digital component is a collection of gates that has a specific function \u2014\u2014think about function or method in high-level programming language</p><p>The design of digital circuits is often at the <strong>component level</strong>\u300C\u7EC4\u4EF6\u7EA7\u522B\u300D</p><ul><li>Digital component is also called <strong>Integrated Circuit</strong>\u300C\u96C6\u6210\u7535\u8DEF\u300D/<strong>IC component</strong>\u300CIC\u7EC4\u4EF6\u300D</li><li>important to know some <strong>commonly used\u300C\u5E38\u7528\u7684\u300D</strong> digital component</li></ul><h3 id="multiplexer-mux" tabindex="-1"><a class="header-anchor" href="#multiplexer-mux" aria-hidden="true">#</a> Multiplexer (MUX)</h3><p>N input to 1 output unit (N-to-1) MUX: choose one of the N inputs as the output depending on control signal\u300C\u63A7\u5236\u4FE1\u53F7\u300D (also known as data selector\u300C\u6570\u636E\u9009\u62E9\u5668\u300D)\u300CN\u4E2A\u8F93\u5165\u52301\u4E2A\u8F93\u51FA\u5355\u5143\uFF08N-\u81F3-1\uFF09MUX\uFF1A\u6839\u636E\u63A7\u5236\u4FE1\u53F7\u9009\u62E9N\u4E2A\u8F93\u5165\u4E4B\u4E00\u4F5C\u4E3A\u8F93\u51FA\uFF08\u4E5F\u79F0\u4E3A\u6570\u636E\u9009\u62E9\u5668\uFF09\u300D</p><img src="https://pic.hanjiaming.com.cn/2021/03/29/a3817edfb1a9d.png" alt="image.png" title="image.png" width="200px"><img src="https://pic.hanjiaming.com.cn/2021/03/29/44b354a8e4a77.png" alt="image.png" title="image.png"><p>2^n number of input requires n number of selection controls</p><p>Note: the output value in the truth table is not 0/1, instead it is D\u300C\u6CE8\u610F\uFF1A\u771F\u503C\u8868\u4E2D\u7684\u8F93\u51FA\u503C\u4E0D\u662F0/1\uFF0C\u800C\u662FD\u300D</p><p>\u6CE8\uFF1AD\u662F\u4F4D\u7EC4\u5408</p><h4 id="implement" tabindex="-1"><a class="header-anchor" href="#implement" aria-hidden="true">#</a> Implement</h4><p>How can we implement this 4-to-1 MUX?</p><p>idea is similar to that of transforming a Truth table to SOP form</p><img src="https://pic.hanjiaming.com.cn/2021/03/29/55f9804526bd5.png" alt="image.png" title="image.png"><img src="https://pic.hanjiaming.com.cn/2021/03/29/62fea12757db1.png" alt="image.png" title="image.png"><h4 id="applications" tabindex="-1"><a class="header-anchor" href="#applications" aria-hidden="true">#</a> Applications</h4><p>Main advantage\uFF1Areduce the usage of wires \u2014 multiple input wires vs. control wires and one single output wire\u300C\u51CF\u5C11\u7535\u7EBF\u7684\u4F7F\u7528-\u591A\u6839\u8F93\u5165\u7EBF\u4E0E\u63A7\u5236\u7EBF\u548C\u4E00\u6839\u5355\u6839\u8F93\u51FA\u7EBF\u300D</p><p>Example of application\uFF1Aremember Bus? (different data can travel over the same bus)</p><img src="https://pic.hanjiaming.com.cn/2021/03/29/398310899ace0.png" alt="image.png" title="image.png"><h3 id="demultiplexer-demux" tabindex="-1"><a class="header-anchor" href="#demultiplexer-demux" aria-hidden="true">#</a> Demultiplexer (DEMUX)</h3><ul><li>A Decoder with an Enabler\u300C\u5E26\u542F\u52A8\u5668\u7684\u89E3\u7801\u5668\u300D <ul><li>less input (A,B); more output (F)</li><li>an Enabler D <ul><li>when D = 0, all output = 0</li><li>when D = 1, A,B control which output wire is \u201Con\u201D</li></ul></li></ul></li></ul><p>Why it is called decoder: we use two bits A and B to encode four states (which output wire is on); this digital component will try to decode the input AB when there is no Enabler D, DEMUX is a Decoder (n inputs, 2^n outputs)</p><p>\u300C\u4E3A\u4F55\u79F0\u4E3A\u89E3\u7801\u5668\uFF1A\u6211\u4EEC\u4F7F\u7528\u4E24\u4F4DA\u548CB\u6765\u7F16\u7801\u56DB\u4E2A\u72B6\u6001\uFF08\u8F93\u51FA\u7EBF\u5DF2\u6253\u5F00\uFF09\uFF1B\u8BE5\u6570\u5B57\u7EC4\u4EF6\u5C06\u5C1D\u8BD5\u89E3\u7801\u8F93\u5165AB \u5982\u679C\u6CA1\u6709\u542F\u52A8\u5668D\uFF0C\u5219DEMUX\u662F\u89E3\u7801\u5668\uFF08n\u4E2A\u8F93\u5165\uFF0C2 ^ n\u4E2A\u8F93\u51FA\uFF09\u300D</p><p>\u6CE8\uFF1A\u7ED3\u679C\u662F\u53EA\u6709\u4E00F\u4E3A1\uFF0C\u5176\u4ED6\u5747\u4E3A0\uFF1B</p><h4 id="application" tabindex="-1"><a class="header-anchor" href="#application" aria-hidden="true">#</a> Application</h4><ul><li>connect the source signal to multiple destinations, where each output wire is connected to one destination\u300C\u5C06\u6E90\u4FE1\u53F7\u8FDE\u63A5\u5230\u591A\u4E2A\u76EE\u7684\u5730\uFF0C\u5176\u4E2D\u6BCF\u6761\u8F93\u51FA\u7EBF\u90FD\u8FDE\u63A5\u5230\u4E00\u4E2A\u76EE\u7684\u5730\u300D</li><li>the source signal (AB) decides which destination is \u201Con\u201D\u300C\u6E90\u4FE1\u53F7\uFF08AB\uFF09\u51B3\u5B9A\u54EA\u4E2A\u76EE\u7684\u5730\u201C\u6253\u5F00\u201D\u300D</li><li>Simple example: the output line can act as an Enabler for the destination machine\u300C\u7B80\u5355\u793A\u4F8B\uFF1A\u8F93\u51FA\u884C\u53EF\u4EE5\u5145\u5F53\u76EE\u6807\u8BA1\u7B97\u673A\u7684\u542F\u52A8\u5668\u300D</li></ul><h3 id="binary-adder" tabindex="-1"><a class="header-anchor" href="#binary-adder" aria-hidden="true">#</a> Binary Adder</h3><p>One-bit Adder with Carry Input: the carry forward bit from the previous bit position\u300C\u524D\u4E00\u4F4D\u7684\u8FDB\u4F4D\u300D</p><img src="https://pic.hanjiaming.com.cn/2021/03/30/ec1d85b6f2ef0.png" alt="image.png" title="image.png"><p>\u6CE8\uFF1A\u5C06A\u4E0EB\u4E0EC\u52A0\u548C\uFF0C\u7ED3\u679C\u7684&quot;\u5341\u4F4D&quot; \u653E\u5230 Cout\uFF0C&quot;\u4E2A\u4F4D&quot;\u653E\u5230S\uFF1B\u6CE8\u610F\u8FD9\u91CC\u662F\u4E8C\u8FDB\u5236\uFF01</p><img src="https://pic.hanjiaming.com.cn/2021/03/30/12ce0892d9a25.png" alt="image.png" title="image.png">',65);function n(o,l){return a}var s=i(t,[["render",n]]);export{s as default};
