const e={key:"v-0e394e0e",path:"/note/cs/co/Introduction-To-DigitalLogic/Combinational-Logic4.html",title:"Combinational Logic 4",lang:"zh-CN",frontmatter:{article:!1,date:"2021-05-01T00:00:00.000Z",summary:"Combinational Logic 4 Finite State Machine (FSM) Example\uFF1A3-bit Synchronous Counter The counter will count through 000, 001, \u2026 , 111, then get back to 000; Each count (e.g., 001) is",head:[["meta",{property:"og:url",content:"https://guomaimang.github.io/note/cs/co/Introduction-To-DigitalLogic/Combinational-Logic4.html"}],["meta",{property:"og:site_name",content:"\u5F18\u6811"}],["meta",{property:"og:title",content:"Combinational Logic 4"}],["meta",{property:"og:type",content:"article"}],["meta",{property:"og:locale",content:"zh-CN"}],["meta",{property:"og:locale:alternate",content:"en-US"}],["meta",{property:"article:published_time",content:"2021-05-01T00:00:00.000Z"}]]},excerpt:"",headers:[{level:2,title:"Finite State Machine (FSM)",slug:"finite-state-machine-fsm",children:[{level:3,title:"Example\uFF1A3-bit Synchronous Counter",slug:"example-3-bit-synchronous-counter",children:[]},{level:3,title:"Concept",slug:"concept",children:[]},{level:3,title:"Formal Model of FSM",slug:"formal-model-of-fsm",children:[]},{level:3,title:"Represent",slug:"represent",children:[]},{level:3,title:"Analytical Task",slug:"analytical-task",children:[]}]},{level:2,title:"Design of sequential circuits",slug:"design-of-sequential-circuits",children:[{level:3,title:"A Recap of Terminologies on Flip-Flops",slug:"a-recap-of-terminologies-on-flip-flops",children:[]},{level:3,title:"Common Flip-Flop Types",slug:"common-flip-flop-types",children:[]},{level:3,title:"Think",slug:"think",children:[]},{level:3,title:"Summary",slug:"summary",children:[]}]}],git:{createdTime:1648028052e3,updatedTime:1648028052e3,contributors:[{name:"hanjiaming",email:"47519540+guomaimang@users.noreply.github.com",commits:1}]},readingTime:{minutes:8.18,words:2453},filePathRelative:"note/cs/co/Introduction-To-DigitalLogic/Combinational-Logic4.md"};export{e as data};
