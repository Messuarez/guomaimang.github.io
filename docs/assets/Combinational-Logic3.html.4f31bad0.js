import{_ as e,f as i}from"./app.3e676b78.js";const a={},t=i('<h1 id="combinational-logic-3" tabindex="-1"><a class="header-anchor" href="#combinational-logic-3" aria-hidden="true">#</a> Combinational Logic 3</h1><h2 id="review" tabindex="-1"><a class="header-anchor" href="#review" aria-hidden="true">#</a> Review</h2><p>Work flow: from real-world problems to digital circuits\u300C\u5DE5\u4F5C\u6D41\u7A0B\uFF1A\u4ECE\u5B9E\u9645\u95EE\u9898\u5230\u6570\u5B57\u7535\u8DEF\u300D</p><ul><li>modeling of real-world problems (input, output, switching functions, Z = f (A,B,C, \u2026, ))</li><li>truth table: another representation of boolean functions</li><li>SOP/POS forms</li><li>digital circuits</li></ul><h2 id="simplification" tabindex="-1"><a class="header-anchor" href="#simplification" aria-hidden="true">#</a> Simplification</h2><img src="https://pic.hanjiaming.com.cn/2021/03/30/00f16665b8f84.png" alt="image.png" title="image.png"><p>Given a Boolean expression, we may have two qustions</p><ul><li>can it be simplified?</li><li>if you found simplification, is it the simplest form? <ul><li>a systematical way \u2014 Karnaugh map (K-map)</li></ul></li></ul><p><strong>\u5927\u81F4\u6709\u4EE5\u4E0B\u65B9\u6CD5</strong></p><ul><li><p>Algebraic simplification\u300C\u4EE3\u6570\u7B80\u5316\u300D</p><ul><li>applying the properties\u300C\u5C5E\u6027/\u6027\u8D28\u300D of boolean algebra\u300C\u5E94\u7528\u5E03\u5C14\u4EE3\u6570\u7684\u5C5E\u6027\u300D</li><li>essentially\u300C\u5B9E\u8D28\u4E0A\u300D, it is done by observation \u2014 not good for complex expressions</li></ul></li><li><p>Karnaugh map (K-map)\u300C\u5361\u8BFA\u5730\u56FE\u300D</p><ul><li>a systematical way\u300C\u6210\u7CFB\u7EDF\u7684\u65B9\u6CD5\u300D to deal with expressions with few (up to 4, 5) variables\u300C\u4E00\u79CD\u5904\u7406\u5E26\u6709\u5F88\u5C11\uFF08\u6700\u591A4\u30015\uFF09\u4E2A\u53D8\u91CF\u7684\u8868\u8FBE\u5F0F\u7684\u7CFB\u7EDF\u65B9\u6CD5\u300D</li></ul></li><li><p>Quine-McKluskey tables \u300C\u594E\u56E0-\u9EA6\u514B\u5362\u65AF\u57FA\u8868\u300D(more variables)</p></li></ul><h3 id="karnaugh-map" tabindex="-1"><a class="header-anchor" href="#karnaugh-map" aria-hidden="true">#</a> Karnaugh Map</h3><p>A representation of boolean function\u300C\u5B9E\u8D28\uFF1A\u4E00\u79CD\u5E03\u5C14\u51FD\u6570\u7684\u8868\u793A\u65B9\u6CD5\u300D</p><ul><li>an array of squares\u300C\u6B63\u65B9\u5F62\u9635\u5217\u300D</li><li>each square represent a combination of input values\u300C\u6BCF\u4E2A\u6B63\u65B9\u5F62\u4EE3\u8868\u8F93\u5165\u503C\u7684\u7EC4\u5408\u300D</li><li>for n variables, there are 2^n\uFFFC squares\u300C\u5BF9\u4E8En\u4E2A\u53D8\u91CF\uFF0C\u6709\u4E2A2^n\u4E2A\u6B63\u65B9\u5F62\u300D</li></ul><img src="https://pic.hanjiaming.com.cn/2021/03/30/efaeaf9b96d46.png" alt="image.png" title="image.png"><ul><li>each square can also represent a product term</li></ul><img src="https://pic.hanjiaming.com.cn/2021/03/30/ce3abfa9e2ea9.png" alt="image.png" title="image.png"><h4 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h4><p>\u628A K-Map\u8F6C\u6362\u6210 SOP\u5F0F\u5B50</p><img src="https://pic.hanjiaming.com.cn/2021/03/30/d09ee68d4536e.png" alt="image.png" title="image.png"><h4 id="use-for-simplification" tabindex="-1"><a class="header-anchor" href="#use-for-simplification" aria-hidden="true">#</a> Use for Simplification</h4><p>Given any boolean function, how to do simplification use Karnaugh map? Transform the boolean function to canonical form: each term must contain each variable\u300C\u5C06\u5E03\u5C14\u51FD\u6570\u8F6C\u6362\u4E3A\u89C4\u8303\u5F62\u5F0F\uFF1A\u6BCF\u4E2Aterm\u5FC5\u987B\u5305\u542B\u6BCF\u4E2A\u53D8\u91CF\u300D</p><img src="https://pic.hanjiaming.com.cn/2021/03/30/274e79c0adf55.png" alt="image.png" title="image.png"><h5 id="operation" tabindex="-1"><a class="header-anchor" href="#operation" aria-hidden="true">#</a> Operation</h5><p>Group \u201C1-squares\u201D to blocks</p><img src="https://pic.hanjiaming.com.cn/2021/03/30/7170bd7fe6d98.png" alt="image.png" title="image.png"><p><strong>Grouping Squares into Blocks \u300C\u5C06\u65B9\u5757\u5206\u7EC4\u300D</strong></p><ul><li>Rules of grouping 1-squares into blocks <ul><li>group adjacent 1-squares into one block</li><li>one block can contain \uFFFC 2^i 1-squares (1, 2, 4, 8,\u2026)</li></ul></li><li>Goals ogrou ouping 1-squares into blocks <ul><li>number of blocks should be minimized\u300C\u5757\u7684\u6570\u91CF\u5E94\u6700\u5C0F\u5316\u300D</li><li>size of a block should be maximized\u300C\u5757\u7684\u5927\u5C0F\u5E94\u6700\u5927\u5316\u300D</li></ul></li></ul><h5 id="adjacent-squares" tabindex="-1"><a class="header-anchor" href="#adjacent-squares" aria-hidden="true">#</a> Adjacent squares</h5><p>\u300C\u76F8\u90BB\u65B9\u5757\u300D</p><p>Note: \u201C00, 01, 11, 10\u201D are arranged in this order such that adjacent squares differ in one variable</p><img src="https://pic.hanjiaming.com.cn/2021/03/30/e0f6ffe72cb75.png" alt="image.png" title="image.png"><p>Example</p><img src="https://pic.hanjiaming.com.cn/2021/03/30/eaaf55ca2ba65.png" alt="image.png" title="image.png"><p>\u4EE5\u4E0A\u90FD\u7B97\u76F8\u90BB\u7684</p><p>We wan to minimize the number of blocks\u300C\u6211\u4EEC\u8981\u6700\u5C0F\u5316\u5757\u6570\u300D</p><h5 id="reuse-block" tabindex="-1"><a class="header-anchor" href="#reuse-block" aria-hidden="true">#</a> Reuse Block</h5><p>We can reuse the 1-square to increase the size of the block\u300C\u6211\u4EEC\u53EF\u4EE5\u91CD\u75281\u5E73\u65B9\u6765\u589E\u52A0\u5757\u7684\u5927\u5C0F\u300D</p><img src="https://pic.hanjiaming.com.cn/2021/03/30/e4d1af9c1699b.png" alt="image.png" title="image.png"><p>Example 1</p><img src="https://pic.hanjiaming.com.cn/2021/03/30/582c8291931de.png" alt="image.png" title="image.png"><p>Which one is better?</p><p>Choose blocks with larger size even there are more overlaps \u2014 the first one can result in the simplest form\u300C\u5373\u4F7F\u6709\u66F4\u591A\u7684\u91CD\u53E0\uFF0C\u4E5F\u8981\u9009\u62E9\u66F4\u5927\u5C3A\u5BF8\u7684\u5757-\u7B2C\u4E00\u4E2A\u53EF\u4EE5\u5F62\u6210\u6700\u7B80\u5355\u7684\u5F62\u5F0F\u300D</p><p>Example 2</p><img src="https://pic.hanjiaming.com.cn/2021/03/30/46ba0ad173be9.png" alt="image.png" title="image.png"><img src="https://pic.hanjiaming.com.cn/2021/03/30/3ebe93f31d16c.png" alt="image.png" title="image.png"><h5 id="derive-term-from-block" tabindex="-1"><a class="header-anchor" href="#derive-term-from-block" aria-hidden="true">#</a> Derive Term from Block</h5><ul><li>Each block represents a term</li><li>cancel the variable which has inconsistent values in the block \u300C\u53D6\u6D88\u5757\u4E2D\u503C\u4E0D\u4E00\u81F4\u7684\u53D8\u91CF\u300D</li></ul><img src="https://pic.hanjiaming.com.cn/2021/03/30/5ab6dfe8856a1.png" alt="image.png" title="image.png"><h5 id="example-1" tabindex="-1"><a class="header-anchor" href="#example-1" aria-hidden="true">#</a> Example</h5><img src="https://pic.hanjiaming.com.cn/2021/03/30/72ba18e7e4139.png" alt="image.png" title="image.png"><img src="https://pic.hanjiaming.com.cn/2021/03/30/d994af1a1fb61.png" alt="image.png" title="image.png"><img src="https://pic.hanjiaming.com.cn/2021/03/30/b0a3f2d691366.png" alt="image.png" title="image.png"><h5 id="summary" tabindex="-1"><a class="header-anchor" href="#summary" aria-hidden="true">#</a> Summary</h5><p>Steps of using K-map for simplification</p><ul><li>given any boolean function</li><li>transform it canonical form</li><li>draw the K-map</li><li>group the 1-squares into blocks</li><li>derive terms from blocks</li></ul><h4 id="another-feature" tabindex="-1"><a class="header-anchor" href="#another-feature" aria-hidden="true">#</a> Another feature</h4><p>featute \u6B64\u5904\u7FFB\u8BD1\u4E3A \u7279\u70B9\uFF0C\u800C\u4E0D\u662F\u529F\u80FD</p><p>Another feature of K-map \u2014 \u201Cdon\u2019t care\u201D conditions</p><p>Motivation: for some problems, we do not need to define a complete truth table</p><ul><li>that is, some combinations of input values are not meaningful\u300C\u4E5F\u5C31\u662F\u8BF4\uFF0C\u8F93\u5165\u503C\u7684\u67D0\u4E9B\u7EC4\u5408\u662F\u6CA1\u6709\u610F\u4E49\u7684\u300D <ul><li>example: consider decimal incrementer: input = X, output = (X+1) mod 10, where X ranges from 0 to 9\u300C\u793A\u4F8B\uFF1A\u8003\u8651\u5341\u8FDB\u5236\u589E\u91CF\u5668\uFF1A\u8F93\u5165= X\uFF0C\u8F93\u51FA=\uFF08X + 1\uFF09mod 10\uFF0C\u5176\u4E2DX\u7684\u8303\u56F4\u662F0\u52309\u300D <ul><li>we use 4 bits to represent the input/output \u2014 there is redundant\u300C\u6709\u4F59\u7684\u300D</li></ul></li></ul></li></ul><p>for don\u2019t care conditions, we mark the corresponding\u300C\u76F8\u5E94\u7684\u300D squares in K-map as \u201Cd\u201D</p><img src="https://pic.hanjiaming.com.cn/2021/03/30/a62516c47d5d6.png" alt="image.png" title="image.png"><h4 id="d-square-in-k-map" tabindex="-1"><a class="header-anchor" href="#d-square-in-k-map" aria-hidden="true">#</a> d-square in K-map</h4><p>you can specify\u300C\u6307\u5B9A\u300Dthe value of \u201Cd\u201D (1 or blank) in the K-map Purpose: reduce the number of blocks &amp; increase the size of blocks</p><img src="https://pic.hanjiaming.com.cn/2021/03/30/914e95253c0f5.png" alt="image.png" title="image.png"><h2 id="sequential-circuits" tabindex="-1"><a class="header-anchor" href="#sequential-circuits" aria-hidden="true">#</a> Sequential Circuits</h2><p>Sequential Circuits\u300C\u987A\u5E8F\u7535\u8DEF\u300D</p><h3 id="comparation" tabindex="-1"><a class="header-anchor" href="#comparation" aria-hidden="true">#</a> Comparation</h3><p>Combinational Circuits\u300C\u7EC4\u5408\u7535\u8DEF\u300D vs. Sequential Circuits\u300C\u987A\u5E8F\u7535\u8DEF\u300D</p><p><strong>Combinational Circuits</strong> are memoryless\u300C\u7EC4\u5408\u7535\u8DEF\u662F\u65E0\u8BB0\u5FC6\u7684\u300D</p><ul><li>the output depends only on the current input (there is an exceptional case of ROM)\u300C\u8F93\u51FA\u4EC5\u53D6\u51B3\u4E8E\u5F53\u524D\u8F93\u5165\uFF08ROM\u6709\u4E00\u4E2A\u4F8B\u5916\u60C5\u51B5\uFF09\u300D</li><li>there is another class of logic circuits with such property: the outputs depend not only on the current inputs, but also on the past behavior of the circuit \u2014 there are storage elements (memory) in the circuits\u300C\u8FD8\u6709\u53E6\u4E00\u7C7B\u5177\u6709\u8FD9\u79CD\u7279\u6027\u7684\u903B\u8F91\u7535\u8DEF\uFF1A\u8F93\u51FA\u4E0D\u4EC5\u53D6\u51B3\u4E8E\u7535\u6D41\u8F93\u5165\uFF0C\u8FD8\u53D6\u51B3\u4E8E\u7535\u8DEF\u7684\u8FC7\u53BB\u884C\u4E3A\u2014\u7535\u8DEF\u4E2D\u6709\u5B58\u50A8\u5143\u4EF6\uFF08\u5B58\u50A8\u5668\uFF09\u300D</li></ul><h3 id="concept" tabindex="-1"><a class="header-anchor" href="#concept" aria-hidden="true">#</a> Concept</h3><ul><li>the contents of the storage elements represent the state of the circuit\u300C\u5B58\u50A8\u5143\u4EF6\u7684\u5185\u5BB9\u8868\u793A\u7535\u8DEF\u7684\u72B6\u6001\u300D</li><li>the input may leave the circuit in the same state, or cause it to a new state;\u300C\u8F93\u5165\u53EF\u80FD\u4F7F\u7535\u8DEF\u4FDD\u6301\u76F8\u540C\u72B6\u6001\uFF0C\u6216\u4F7F\u5176\u53D8\u4E3A\u65B0\u72B6\u6001\uFF1B\u300D <ul><li>output (next state) = current input + current state\u300C\u8F93\u51FA\uFF08\u4E0B\u4E00\u4E2A\u72B6\u6001\uFF09=\u5F53\u524D\u8F93\u5165+\u5F53\u524D\u72B6\u6001\u300D</li></ul></li><li><strong>over time, the circuit changes through a sequence of states as a result of changes in the inputs\u300C\u968F\u7740\u65F6\u95F4\u7684\u6D41\u901D\uFF0C\u7531\u4E8E\u8F93\u5165\u7684\u53D8\u5316\uFF0C\u7535\u8DEF\u4F1A\u901A\u8FC7\u4E00\u7CFB\u5217\u72B6\u6001\u53D8\u5316\u300D</strong></li><li><strong>circuits that exhibit this behavior are referred to as sequential circuits\u300C\u8868\u73B0\u51FA\u8FD9\u79CD\u884C\u4E3A\u7684\u7535\u8DEF\u79F0\u4E3A\u987A\u5E8F\u7535\u8DEF\u300D</strong></li></ul><h4 id="example-2" tabindex="-1"><a class="header-anchor" href="#example-2" aria-hidden="true">#</a> Example</h4><p>Simple but useful examples of sequential circuits</p><ul><li>different types of Flip-Flops</li><li>registers</li><li>counters</li></ul><h3 id="flip-flops" tabindex="-1"><a class="header-anchor" href="#flip-flops" aria-hidden="true">#</a> Flip-Flops</h3><p>There are a variety of flip-flops, all of which share two properties\u300C\u6709\u5404\u79CD\u5404\u6837\u7684\u89E6\u53D1\u5668\uFF0C\u5B83\u4EEC\u90FD\u5177\u6709\u4E24\u4E2A\u7279\u6027\u300D</p><ul><li>it is a bistable\u300C\u53CC\u7A33\u6001\u300D device: it exists in one of two states and, in the absence of input, remains in that state\u300C<strong>\u5B83\u662F\u4E00\u4E2A\u53CC\u7A33\u6001\u8BBE\u5907\uFF1A\u5B83\u5904\u4E8E\u4E24\u79CD\u72B6\u6001\u4E4B\u4E00\uFF0C\u5E76\u4E14\u5728\u6CA1\u6709\u8F93\u5165\u7684\u60C5\u51B5\u4E0B\u4ECD\u4FDD\u6301\u8BE5\u72B6\u6001</strong>\u300D</li><li>it has two outputs, Qand -Q (the complement of each other)\u300C\u5B83\u6709\u4E24\u4E2A\u8F93\u51FA\uFF0CQ\u548CQ\u62D4\uFF08\u5F7C\u6B64\u4E92\u8865\uFF09\u300D</li></ul><h4 id="s-r-latch-s-r-flip-flop" tabindex="-1"><a class="header-anchor" href="#s-r-latch-s-r-flip-flop" aria-hidden="true">#</a> S-R Latch (S-R Flip-Flop)</h4><p>S-R Latch (S-R Flip-Flop) \u300CS-R\u9501\u5B58\u5668\u300D</p><ul><li>Use the output Q as the state of the Latch</li><li>it has two stable states: Q = 1 and Q = 0</li></ul><img src="https://pic.hanjiaming.com.cn/2021/03/30/46a5593f4dc88.png" alt="image.png" title="image.png"><img src="https://pic.hanjiaming.com.cn/2021/03/30/c5376ec0b1d38.png" alt="image.png" title="image.png"><p>We can see that S-R Latch can be used as a storage element to store 1 bit (1-bit memory)\u300C\u6211\u4EEC\u53EF\u4EE5\u770B\u5230S-R\u9501\u5B58\u5668\u53EF\u4EE5\u7528\u4F5C\u5B58\u50A81\u4F4D\uFF081\u4F4D\u5185\u5B58\uFF09\u7684\u5B58\u50A8\u5143\u7D20\u300D</p><p>Note the feedback path in the circuit\u300CNote the feedback path in the circuit\u300D</p><p>\u6CE8\uFF1A\u8FDE\u7EBF\u7684\u5730\u65B9\u7535\u538B\u76F8\u540C\uFF0C\u5373\u8868\u793A\u4FE1\u53F7\u76F8\u540C\u3002\u5982\u4E0B\u56FE</p><img src="https://pic.hanjiaming.com.cn/2021/03/30/df3c99ef7bbc1.png" alt="image.png" title="image.png"><h5 id="change-input" tabindex="-1"><a class="header-anchor" href="#change-input" aria-hidden="true">#</a> Change Input</h5><img src="https://pic.hanjiaming.com.cn/2021/03/30/3f1160950f9c3.png" alt="image.png" title="image.png"><h5 id="characteristic-table" tabindex="-1"><a class="header-anchor" href="#characteristic-table" aria-hidden="true">#</a> Characteristic Table</h5><p>Use characteristic table to describe a sequential circuit\uFF1Adescribe the relations between next state (output) and input &amp; current state\u300C\u4F7F\u7528\u7279\u6027\u8868\u6765\u63CF\u8FF0\u65F6\u5E8F\u7535\u8DEF\uFF1A\u63CF\u8FF0\u4E0B\u4E00\u4E2A\u72B6\u6001\uFF08\u8F93\u51FA\uFF09\u4E0E\u8F93\u5165\u548C\u5F53\u524D\u72B6\u6001\u4E4B\u95F4\u7684\u5173\u7CFB\u300D</p><img src="https://pic.hanjiaming.com.cn/2021/03/30/6c73c80248826.png" alt="image.png" title="image.png"><p>\u6CE8\uFF1A00\u4E0D\u53D8\uFF0CS \u6539 1 \u4E0B\u4E00\u4E2AQ\u4E3A1\uFF0CR \u6539 1\u4E0B\u4E00\u4E2AQ\u4E3A0\uFF1BS\u548CR\u53EA\u6709\u4E00\u4E2A\u53EF\u4EE5\u53D8\u6210\u4E00\uFF0C\u53E6\u4E00\u4E2A\u5FC5\u987B\u4E3A0\uFF1B</p><img src="https://pic.hanjiaming.com.cn/2021/03/30/6ff37fadfde5b.png" alt="image.png" title="image.png"><p>S\u65391\uFF0CQ\u6709\u4E24\u4E2A\u25B3t\uFF1BR\u65391\uFF0CQ\u6709\u4E00\u4E2A\u25B3t\uFF1B</p><p>\u6211\u4EEC\u53D1\u73B0\u5728Q\u548C-Q\u7684\u6539\u53D8\u65F6\u95F4\u4E0D\u4E00\u81F4\uFF0C\u6211\u4EEC\u73B0\u5728\u4E0D\u5173\u5FC3\u8FD9\u4E2A\u95EE\u9898\u3002</p><p>\u6211\u4EEC\u8981\u6C42R\u548CS\u7684\u6539\u53D8\u65F6\u95F4\u5FC5\u987B\u4E00\u81F4\uFF0C\u6211\u4EEC\u5FC5\u987B\u8981\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\u3002</p><h5 id="synchronization-issue" tabindex="-1"><a class="header-anchor" href="#synchronization-issue" aria-hidden="true">#</a> Synchronization Issue</h5><p>The change of inputs causes the change of states\u300C\u8F93\u5165\u7684\u53D8\u5316\u5BFC\u81F4\u72B6\u6001\u7684\u53D8\u5316\u300D</p><ul><li>in digital computers, we want to unify\u300C\u7EDF\u4E00\u300D the timings of changes\u300C\u5728\u6570\u5B57\u8BA1\u7B97\u673A\u4E2D\uFF0C\u6211\u4EEC\u5E0C\u671B\u7EDF\u4E00\u53D8\u66F4\u7684\u65F6\u95F4\u300D</li><li>solution: use a clock signal such that the changes of inputs occur only when a clock pulse\u300C\u65F6\u949F\u8109\u51B2\u300D occurs\u300C\u89E3\u51B3\u65B9\u6848\uFF1A\u4F7F\u7528\u65F6\u949F\u4FE1\u53F7\uFF0C\u4EE5\u4F7F\u8F93\u5165\u7684\u66F4\u6539\u4EC5\u5728\u51FA\u73B0\u65F6\u949F\u8109\u51B2\u65F6\u624D\u53D1\u751F\u300D <ul><li>all changes are synchronized to this clock (time is digitalized\u300C\u6570\u5B57\u5316\u300D)\u300C\u6240\u6709\u66F4\u6539\u90FD\u540C\u6B65\u5230\u6B64\u65F6\u949F\uFF08\u65F6\u95F4\u5DF2\u6570\u5B57\u5316\uFF09\u300D</li></ul></li></ul><img src="https://pic.hanjiaming.com.cn/2021/03/30/229e871cb2fec.png" alt="image.png" title="image.png"><p>How to use clock for synchronization?\u300C\u5982\u4F55\u4F7F\u7528\u65F6\u949F\u8FDB\u884C\u540C\u6B65\uFF1F\u300D</p><p>use AND gate: consider Y = X AND Clock, when Clock = 0, Y=0; when Clock = 1, Y = X</p><img src="https://pic.hanjiaming.com.cn/2021/03/30/35bbd05034c1b.png" alt="image.png" title="image.png"><h4 id="clocked-s-r-flip-flop" tabindex="-1"><a class="header-anchor" href="#clocked-s-r-flip-flop" aria-hidden="true">#</a> Clocked S-R Flip-Flop</h4><p>1-bit memory</p><ul><li>use S and R to control the writing of bit 0/1\u300C\u4F7F\u7528S\u548CR\u63A7\u5236\u4F4D0/1\u7684\u5199\u5165\u300D</li><li>use clock to control when to write \u2014when the flip-flop is \u201Ctriggered\u300C\u89E6\u53D1\u300D\u201D\u300C\u4F7F\u7528\u65F6\u949F\u6765\u63A7\u5236\u4F55\u65F6\u5199\u5165\uFF0C\u5373\u201C\u89E6\u53D1\u201D\u89E6\u53D1\u5668\u65F6\u300D</li><li>we use Timing Diagram\u300C\u65F6\u5E8F\u56FE\u300D to illustrate \u300C\u8BF4\u660E\u300Dthe changing of input/output with respect to the clock signal\u300C\u6211\u4EEC\u4F7F\u7528\u65F6\u5E8F\u56FE\u6765\u8BF4\u660E\u8F93\u5165/\u8F93\u51FA\u76F8\u5BF9\u4E8E\u65F6\u949F\u4FE1\u53F7\u7684\u53D8\u5316\u300D\u300C\u9AD8\u4E2D\u751F\u7269\u7684\u6709\u6027\u751F\u6B96\u4F7F\u7528\u8FC7\u300D</li></ul><img src="https://pic.hanjiaming.com.cn/2021/03/30/5c360c8cff032.png" alt="image.png" title="image.png" width="200px"><p>\u6CE8\uFF1A\u6211\u4EEC\u7684\u76EE\u7684\u5C31\u662F\u8BA9R\u548CS\u8F93\u5165\u7684\u65F6\u95F4\u4FDD\u6301\u4E00\u81F4\u3002</p><h5 id="idealized-timing-diagram" tabindex="-1"><a class="header-anchor" href="#idealized-timing-diagram" aria-hidden="true">#</a> Idealized Timing Diagram</h5><p>Edge-triggered Flip-Flops \u300C\u8FB9\u7F18\u89E6\u53D1\u7684\u89E6\u53D1\u5668\u300D</p><p>the output changes at the \u201Cedge\u201D of the clock signal (when the clock signal changes)\u300C\u8F93\u51FA\u5728\u65F6\u949F\u4FE1\u53F7\u7684\u201C\u8FB9\u7F18\u201D\u6539\u53D8\uFF08\u5F53\u65F6\u949F\u4FE1\u53F7\u6539\u53D8\u65F6\uFF09\u300D</p><img src="https://pic.hanjiaming.com.cn/2021/03/30/f8c1f2831440b.png" alt="image.png" title="image.png"><p>flip-flops could be positive-edge-trigged or negative edge trigged\u300C\u89E6\u53D1\u5668\u53EF\u4EE5\u662F\u6B63\u8FB9\u6CBF\u89E6\u53D1\u6216\u8D1F\u8FB9\u6CBF\u89E6\u53D1\u300D</p><p><strong>idealized: no gate delay would be shown in the timing diagram\u300C\u7406\u60F3\u5316\uFF1A\u65F6\u5E8F\u56FE\u4E2D\u4E0D\u4F1A\u663E\u793A\u95E8\u5EF6\u8FDF\u300D</strong></p><p>\u6CE8\uFF1A\u7406\u60F3\u5316\u6A21\u578B\u6CA1\u6709\u95E8\u5EF6\u8FDF\uFF0C\u5373\u4E0D\u8003\u8651Gate Delay</p><p>use the bubble for indication\u300C\u7528\u6C14\u6CE1\u6307\u793A\u300D</p><img src="https://pic.hanjiaming.com.cn/2021/03/30/02da801eebe7a.png" alt="image.png" title="image.png"><img src="https://pic.hanjiaming.com.cn/2021/03/30/5adbada2dc219.png" alt="image.png" title="image.png"><h4 id="other-common-flip-flops" tabindex="-1"><a class="header-anchor" href="#other-common-flip-flops" aria-hidden="true">#</a> Other Common Flip-Flops</h4><h5 id="d-flip-flop" tabindex="-1"><a class="header-anchor" href="#d-flip-flop" aria-hidden="true">#</a> D Flip-Flop</h5><ul><li>one problem with S-R flip-flop is that R = S = 1 should be avoid</li><li>D flop-flop uses a single input source: it is a S-R flip-flop with \uFFFCS = -R</li></ul><img src="https://pic.hanjiaming.com.cn/2021/03/30/5752c5d3f3b1c.png" alt="image.png" title="image.png"><ul><li>the output is always equal to the most recent input value D\u300Cthe output is always equal to the most recent input value D\u300D</li><li>storage for one bit of data</li></ul><img src="https://pic.hanjiaming.com.cn/2021/03/30/490ea72a39fcc.png" alt="image.png" title="image.png"><h5 id="j-k-flip-flop" tabindex="-1"><a class="header-anchor" href="#j-k-flip-flop" aria-hidden="true">#</a> J-K Flip-Flop</h5><p>all combinations of two input values are valid (including 1 1)\u300C\u4E24\u4E2A\u8F93\u5165\u503C\u7684\u6240\u6709\u7EC4\u5408\u5747\u6709\u6548\uFF08\u5305\u62EC1 1\uFF09\u300D</p><img src="https://pic.hanjiaming.com.cn/2021/03/30/faed0bb251af9.png" alt="image.png" title="image.png"><img src="https://pic.hanjiaming.com.cn/2021/03/30/d65a2ed19d8d5.png" alt="image.png" title="image.png"><h3 id="registers" tabindex="-1"><a class="header-anchor" href="#registers" aria-hidden="true">#</a> Registers</h3><ul><li>used in CPU to store one or more bits (multiple flip-flops)\u300C\u5728CPU\u4E2D\u7528\u4E8E\u5B58\u50A8\u4E00\u4E2A\u6216\u591A\u4E2A\u4F4D\uFF08\u591A\u4E2A\u89E6\u53D1\u5668\uFF09\u300D</li><li>two types: shift registers and parallel registers\u300C\u4E24\u79CD\u7C7B\u578B\uFF1A\u79FB\u4F4D\u5BC4\u5B58\u5668\u548C\u5E76\u884C\u5BC4\u5B58\u5668\u300D</li><li>parallel registers: a set of 1-bit memories that change state simultaneously\u300C\u540C\u65F6\u7684\u300D\u300C\u5E76\u884C\u5BC4\u5B58\u5668\uFF1A\u4E00\u7EC4\u540C\u65F6\u6539\u53D8\u72B6\u6001\u76841\u4F4D\u5B58\u50A8\u5668\u300D</li><li>shift registers: states are changed sequentially\u300C\u79FB\u4F4D\u5BC4\u5B58\u5668\uFF1A\u72B6\u6001\u987A\u5E8F\u66F4\u6539\u300D</li></ul><h4 id="example-8-bit-parallel-registers" tabindex="-1"><a class="header-anchor" href="#example-8-bit-parallel-registers" aria-hidden="true">#</a> Example: 8-bit Parallel Registers</h4><p>\u6CE8\u610F\uFF1Asource of data (can use MUX to connect to multiple sources)\u300C\u6839\u636E\u8D44\u6599\uFF1A\u53EF\u4EE5\u4F7F\u7528MUX\u8FDE\u63A5\u5230\u591A\u4E2A\u6E90\u300D</p><img src="https://pic.hanjiaming.com.cn/2021/03/31/ba11cde6dca4a.png" alt="image.png" title="image.png"><h4 id="example-5-bit-shift-registers" tabindex="-1"><a class="header-anchor" href="#example-5-bit-shift-registers" aria-hidden="true">#</a> Example: 5-bit Shift Registers</h4><img src="https://pic.hanjiaming.com.cn/2021/03/31/7cdd601ebcc30.png" alt="image.png" title="image.png"><p>with each clock pulse, data are shifted to the right on position, and the rightmost bit is transferred out\u300C\u6BCF\u4E2A\u65F6\u949F\u8109\u51B2\u90FD\u4F1A\u5C06\u6570\u636E\u79FB\u5230\u53F3\u8FB9\u7684\u6B63\u786E\u4F4D\u7F6E\uFF0C\u6700\u53F3\u8FB9\u7684\u4F4D\u4F1A\u88AB\u79FB\u51FA\u300D</p><p>shift registers can be used to interface to serial I/O devices, or perform logical shift in ALU\u300C\u79FB\u4F4D\u5BC4\u5B58\u5668\u53EF\u7528\u4E8E\u4E0E\u4E32\u884CI / O\u8BBE\u5907\u63A5\u53E3\uFF0C\u6216\u5728ALU\u4E2D\u6267\u884C\u903B\u8F91\u79FB\u4F4D\u300D</p><h3 id="counters" tabindex="-1"><a class="header-anchor" href="#counters" aria-hidden="true">#</a> Counters</h3><p><strong>A register whose value will increment by 1</strong></p><ul><li>for a counter composed of N flip-flops, the value ranges from 0 to \uFFFC; that is, the output of each flip-flop serves as one bit of the N-bit number\u300C\u5BF9\u4E8E\u7531N\u4E2A\u89E6\u53D1\u5668\u7EC4\u6210\u7684\u8BA1\u6570\u5668\uFF0C\u8BE5\u503C\u7684\u8303\u56F4\u662F0\u5230\uFF1B\u4E5F\u5C31\u662F\u8BF4\uFF0C\u6BCF\u4E2A\u89E6\u53D1\u5668\u7684\u8F93\u51FA\u90FD\u4F5C\u4E3AN\u4F4D\u6570\u5B57\u7684\u4E00\u4F4D\u300D</li><li>asynchronous counter\u300C\u5F02\u6B65\u8BA1\u6570\u5668\u300D: states of flip-flops will NOT change at the same time</li><li>synchronous counter\u300C\u540C\u6B65\u8BA1\u6570\u5668\u300D: states of flip-flops WILL change at the same time</li></ul><h4 id="ripple-counter" tabindex="-1"><a class="header-anchor" href="#ripple-counter" aria-hidden="true">#</a> Ripple Counter</h4><p>Ripple Counter\u300C\u7EB9\u6CE2\u8BA1\u6570\u5668\u300D</p><p>An asynchronous counter is also referred to as a ripple counter\u300C\u6CE2\u7EB9\u8BA1\u6570\u5668\u300D the change that occurs to increment the counter starts at one end and \u201Cripples\u201D through to the other end\u300C\u9012\u589E\u8BA1\u6570\u5668\u6240\u53D1\u751F\u7684\u53D8\u5316\u59CB\u4E8E\u4E00\u7AEF\uFF0C\u201C\u6CE2\u7EB9\u201D\u76F4\u81F3\u53E6\u4E00\u7AEF\u300D</p><img src="https://pic.hanjiaming.com.cn/2021/03/31/7b224d57f61b7.png" alt="image.png" title="image.png"><p>note: the states (outputs) of the flip-flops does not change at the same time; instead, the change ripples through to the other end\u300C\u6CE8\u610F\uFF1A\u89E6\u53D1\u5668\u7684\u72B6\u6001\uFF08\u8F93\u51FA\uFF09\u4E0D\u4F1A\u540C\u65F6\u6539\u53D8\u3002\u76F8\u53CD\uFF0C\u53D8\u5316\u4F1A\u6CE2\u53CA\u5230\u53E6\u4E00\u7AEF\u300D</p><img src="https://pic.hanjiaming.com.cn/2021/03/31/bdaad33ba47d3.png" alt="image.png" title="image.png"><p>all the inputs to the JK flip-flops are 1 \u300CJK\u89E6\u53D1\u5668\u7684\u6240\u6709\u8F93\u5165\u5747\u4E3A1\u300D the clock controls the toggling of output: if there is a clock pulse, the output is toggled\u300C\u65F6\u949F\u63A7\u5236\u8F93\u51FA\u7684\u5207\u6362\uFF1A\u5982\u679C\u6709\u65F6\u949F\u8109\u51B2\uFF0C\u5219\u5207\u6362\u8F93\u51FA\u300D the JK flip-flops are sequentially connected: the output of the previous flip-flop serves as the clock (control signal) of the next flip-flop\u300CJK\u89E6\u53D1\u5668\u987A\u5E8F\u8FDE\u63A5\uFF1A\u524D\u4E00\u4E2A\u89E6\u53D1\u5668\u7684\u8F93\u51FA\u7528\u4F5C\u4E0B\u4E00\u4E2A\u89E6\u53D1\u5668\u7684\u65F6\u949F\uFF08\u63A7\u5236\u4FE1\u53F7\uFF09\u300D</p><img src="https://pic.hanjiaming.com.cn/2021/03/31/b2ca0cf84ed94.png" alt="image.png" title="image.png"><h4 id="synchronous-counter" tabindex="-1"><a class="header-anchor" href="#synchronous-counter" aria-hidden="true">#</a> Synchronous Counter</h4><ul><li>use the outputs of N flip-flops to denote the number\u300C\u4F7F\u7528N\u4E2A\u89E6\u53D1\u5668\u7684\u8F93\u51FA\u8868\u793A\u6570\u5B57\u300D</li><li>states change at the same time\u300C\u72B6\u6001\u540C\u65F6\u6539\u53D8\u300D</li><li>use synchronous counter as the example to show the design process of sequential circuits \u2014 from truth table to SOP to circuits\u300C\u4EE5\u540C\u6B65\u8BA1\u6570\u5668\u4E3A\u4F8B\uFF0C\u6F14\u793A\u65F6\u5E8F\u7535\u8DEF\u7684\u8BBE\u8BA1\u8FC7\u7A0B-\u4ECE\u771F\u503C\u8868\u5230SOP\u518D\u5230\u7535\u8DEF\u300D</li></ul><h5 id="example-3-bit-synchronous-counter" tabindex="-1"><a class="header-anchor" href="#example-3-bit-synchronous-counter" aria-hidden="true">#</a> Example: 3-bit Synchronous Counter</h5><ul><li>Use 3 J-K flip-flops to implement 3-bit counter\u300C\u4F7F\u75283\u4E2AJ-K\u89E6\u53D1\u5668\u5B9E\u73B03\u4F4D\u8BA1\u6570\u5668\u300D</li><li>output of 3 J-K flip-flops: CBA\u300C3 J-K\u89E6\u53D1\u5668\u7684\u8F93\u51FA\uFF1ACBA\u300D</li><li>states: 000 -&gt; 001 -&gt; 010 -&gt; 011 -&gt; 100 -&gt; 101 -&gt; 110 -&gt;111 -&gt; 000</li><li><strong>key: identify the required inputs to change one state to the next state\u300C\u5173\u952E\uFF1A\u786E\u5B9A\u6240\u9700\u7684\u8F93\u5165\u4EE5\u5C06\u4E00\u79CD\u72B6\u6001\u66F4\u6539\u4E3A\u53E6\u4E00\u79CD\u72B6\u6001\u300D</strong></li></ul><p>\u6CE8\uFF1A\u6211\u4EEC\u7684\u76EE\u6807\u662F\u8BA9states\u6309\u7167000 -&gt; 001 -&gt; 010 -&gt; 011 -&gt; 100 -&gt; 101 -&gt; 110 -&gt;111 -&gt; 000\u6539\u53D8\u3002\uFF08\u5C3D\u7BA1\u524D\u9762\u53EF\u4EE5\u7528\u52A0\u6CD5\u5668\u8FDB\u884C\u52A0\u6CD5\uFF09</p><img src="https://pic.hanjiaming.com.cn/2021/03/31/de298fe87628c.png" alt="image.png" title="image.png"><img src="https://pic.hanjiaming.com.cn/2021/03/31/85ee98afbc1d3.png" alt="image.png" title="image.png"><p>\u6CE8\uFF1A\u6211\u4EEC\u73B0\u5728\u5F97\u5230\u4E86C\u7684\u8868\uFF0C\u53EA\u9700\u6309\u7167\u76F8\u540C\u7684\u6B65\u9AA4\u5F97\u5230A\u4E0EB\u7684\u5373\u53EF\uFF0C\u6700\u540E\u62FC\u5230\u4E00\u8D77\u3002</p><p>Now, we can use the same way in the designing of combinatorial circuits:</p><ul><li>treat A, B, C as inputs (feedback path)\u300C\u5C06A\uFF0CB\uFF0CC\u89C6\u4E3A\u8F93\u5165\uFF08\u53CD\u9988\u8DEF\u5F84\uFF09\u300D</li><li>treat each J, K as a function of A, B,C\u300C\u5C06\u6BCF\u4E2AJ\uFF0CK\u89C6\u4E3AA\uFF0CB\uFF0CC\u7684\u51FD\u6570\u300D</li><li>then construct a Karnaugh map for each J, K\u300C\u7136\u540E\u4E3A\u6BCF\u4E2AJ\uFF0CK\u6784\u9020\u4E00\u4E2A\u5361\u8BFA\u56FE\u300D</li></ul><img src="https://pic.hanjiaming.com.cn/2021/03/31/f6225eada68e7.png" alt="image.png" title="image.png"><img src="https://pic.hanjiaming.com.cn/2021/03/31/c9b1f171b107b.png" alt="image.png" title="image.png"><p>Exercise after class: draw the timing diagram for this sequential circuit (how A, B, C would change with Clock?)\u300C\u8BFE\u540E\u7EC3\u4E60\uFF1A\u753B\u51FA\u8BE5\u65F6\u5E8F\u7535\u8DEF\u7684\u65F6\u5E8F\u56FE\uFF08A\uFF0CB\uFF0CC\u968F\u65F6\u949F\u5982\u4F55\u53D8\u5316\uFF1F\uFF09\u300D</p><img src="https://pic.hanjiaming.com.cn/2021/03/31/fea3c77366af1.png" alt="image.png" title="image.png">',164);function n(l,r){return t}var o=e(a,[["render",n]]);export{o as default};
