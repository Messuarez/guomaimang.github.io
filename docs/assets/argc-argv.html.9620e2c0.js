import{_ as n,f as a}from"./app.77ba5bb0.js";const s={},e=a(`<h1 id="\u521D\u8BC6-c-\u4E2D\u7684-argc\u4E0Eargv" tabindex="-1"><a class="header-anchor" href="#\u521D\u8BC6-c-\u4E2D\u7684-argc\u4E0Eargv" aria-hidden="true">#</a> \u521D\u8BC6 c++ \u4E2D\u7684 argc\u4E0Eargv</h1><h2 id="\u524D\u8A00" tabindex="-1"><a class="header-anchor" href="#\u524D\u8A00" aria-hidden="true">#</a> \u524D\u8A00</h2><p>\u5728\u8BB8\u591AC ++ IDE\u548C\u7F16\u8BD1\u5668\u4E2D\uFF0C\u5F53\u5B83\u4E3A\u60A8\u751F\u6210main\u51FD\u6570\u65F6\uFF0C\u5B83\u770B\u8D77\u6765\u50CF\u8FD9\u6837\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u6216\u8005</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u800C\u4E0D\u662F</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="main-\u51FD\u6570\u7279\u70B9" tabindex="-1"><a class="header-anchor" href="#main-\u51FD\u6570\u7279\u70B9" aria-hidden="true">#</a> main \u51FD\u6570\u7279\u70B9</h2><p>main() \u51FD\u6570\u662F C++ \u7A0B\u5E8F\u7684\u5165\u53E3\u51FD\u6570\uFF0CC++ \u6807\u51C6\u89C4\u5B9A main() \u51FD\u6570\u7684\u8FD4\u56DE\u503C\u7C7B\u578B\u4E3A int\uFF0C\u8FD4\u56DE\u503C\u7528\u4E8E\u8868\u793A\u7A0B\u5E8F\u7684\u9000\u51FA\u72B6\u6001\uFF0C\u8FD4\u56DE 0 \u8868\u793A\u7A0B\u5E8F\u6B63\u5E38\u9000\u51FA\uFF0C\u8FD4\u56DE\u975E 0\uFF0C\u8868\u793A\u51FA\u73B0\u5F02\u5E38\u3002C++ \u6807\u51C6\u89C4\u5B9A\uFF0Cmain() \u51FD\u6570\u539F\u578B\u6709\u4E24\u79CD\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">//\u7B2C\u4E00\u79CD</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//\u7B2C\u4E8C\u79CD</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc\uFF0C<span class="token keyword">char</span><span class="token operator">*</span> argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc\uFF0C<span class="token keyword">char</span><span class="token operator">*</span><span class="token operator">*</span> argv<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u5F53 main() \u51FD\u6570\u7684\u8FD4\u56DE\u503C\u4E3Aint\uFF0C\u800C\u51FD\u6570\u5185\u6CA1\u6709\u51FA\u73B0 return \u8BED\u53E5\u65F6\uFF0C\u540C\u6837\u53EF\u4EE5\u901A\u8FC7\u7F16\u8BD1\u5E76\u6B63\u5E38\u8FD0\u884C\u3002\u8FD9\u662F\u56E0\u4E3A\u7F16\u8BD1\u5668\u5728 main() \u51FD\u6570\u7684\u672B\u5C3E\u81EA\u52A8\u6DFB\u52A0\u4E86return 0;\u8BED\u53E5\u3002\u6240\u4EE5\uFF0Cmain() \u51FD\u6570\u662F C++ \u7A0B\u5E8F\u7ECF\u8FC7\u7279\u6B8A\u5904\u7406\u7684\u51FD\u6570\uFF0C\u5176\u4ED6\u7684\u8FD4\u56DE\u503C\u7C7B\u578B\u4E0D\u662F void \u7684\u51FD\u6570\uFF0C\u5982\u679C\u6CA1\u6709\u4F7F\u7528 return \u8BED\u53E5\uFF0C\u7F16\u8BD1\u5668\u5C06\u62A5\u9519\u3002\u867D\u7136\u7F16\u8BD1\u5668\u4F1A\u9690\u5F0F\u6DFB\u52A0return 0;\uFF0C\u4F46\u8FD8\u662F\u5EFA\u8BAE\u5F00\u53D1\u4EBA\u5458\u907F\u514D\u4F7F\u7528\u8FD9\u6761\u89C4\u5219\uFF0C\u56E0\u4E3A\u663E\u793A\u6DFB\u52A0\u53EF\u907F\u514D\u51FA\u9519\u65F6\u65E0\u6CD5\u8FD4\u56DE\u9519\u8BEF\u7801\uFF0C\u5E76\u4E14\u4E0D\u4F1A\u8BEF\u8BA4\u4E3A main() \u51FD\u6570\u53EF\u4EE5\u6CA1\u6709 return \u8BED\u53E5\u3002</p><p>argc \u548C argv \u662F \u7279\u5B9A\u7684\u540D\u79F0\uFF0Cc++ \u7684 main \u51FD\u6570\u53EA\u63A5\u53D7\u8FD9\u4E24\u4E2A\u53C2\u6570\u3002\u6570\u7EC4argv\u4E2D\u7684\u5143\u7D20\u652F\u6301\u4ECE\u5916\u754C\u4F20\u5165\u3002</p><p>\u5E26\u53C2\u7684 main() \u51FD\u6570\u53EF\u4EE5\u63D0\u4F9B\u7528\u6237\u5411\u7A0B\u5E8F\u8F93\u5165\u7684\u53C2\u6570\uFF0C\u4F8B\u5982<code>int main(int argc,char* argv[])</code>\uFF0C\u5176\u4E2D\uFF0Cargc \u4EE3\u8868\u53C2\u6570\u7684\u4E2A\u6570\uFF0Cargv \u6570\u7EC4\u4E2D\u6BCF\u4E00\u4E2A\u5143\u7D20\u7528\u4E8E\u4FDD\u5B58\u547D\u4EE4\u884C\u53C2\u6570\u7684\u5185\u5BB9\u3002</p><h2 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction" aria-hidden="true">#</a> Introduction</h2><p><strong><code>argv</code>\u548C<code>argc</code>\u662F\u5728C\u548CC ++\u4E2D\u5C06\u547D\u4EE4\u884C\u53C2\u6570\u4F20\u9012\u7ED9<code>main()</code> \u3002</strong></p><ul><li>argc\u7528\u6765\u7EDF\u8BA1\u4F60\u8FD0\u884C\u7A0B\u5E8F\u65F6\u9001\u7ED9main\u51FD\u6570\u7684\u547D\u4EE4\u884C\u53C2\u6570\u7684\u4E2A\u6570\u3002</li><li>* argv[ ]: \u5B57\u7B26\u4E32\u6570\u7EC4\uFF0C\u7528\u6765\u5B58\u653E\u6307\u5411\u4F60\u7684\u5B57\u7B26\u4E32\u53C2\u6570\u7684\u6307\u9488\u6570\u7EC4\uFF0C\u6BCF\u4E00\u4E2A\u5143\u7D20\u6307\u5411\u4E00\u4E2A\u53C2\u6570. <ul><li>argv[0] \u6307\u5411\u7A0B\u5E8F\u8FD0\u884C\u7684\u5168\u8DEF\u5F84\u540D</li><li>argv[1] \u6307\u5411\u5728DOS\u547D\u4EE4\u884C\u4E2D\u6267\u884C\u7A0B\u5E8F\u540D\u540E\u7684\u7B2C\u4E00\u4E2A\u5B57\u7B26\u4E32</li><li>argv[2] \u6307\u5411\u6267\u884C\u7A0B\u5E8F\u540D\u540E\u7684\u7B2C\u4E8C\u4E2A\u5B57\u7B26\u4E32</li><li>......</li><li>argv[argc]\u4E3ANULL</li></ul></li></ul><p>argc \u662F argument count\u7684\u7F29\u5199\uFF0C\u8868\u793A\u4F20\u5165main\u51FD\u6570\u7684\u53C2\u6570\u4E2A\u6570\uFF0C<code>argc</code>\u5C06\u662F<code>argv</code>\u6307\u5411\u7684\u5B57\u7B26\u4E32\u7684\u4E2A\u6570\u3002 \uFF08\u5B9E\u9645\u4E0A\uFF09\u8FD9\u5C06\u662F1\u52A0\u4E0A\u53C2\u6570\u7684\u6570\u91CF\uFF0C\u56E0\u4E3A\u51E0\u4E4E\u6240\u6709\u7684\u5B9E\u73B0\u90FD\u5C06\u7A0B\u5E8F\u540D\u653E\u5728\u6570\u7EC4\u7684\u524D\u9762\u3002</p><p>\u6309\u7167\u60EF\u4F8B\uFF0C\u8FD9\u4E9B\u53D8\u91CF\u5206\u522B\u547D\u540D\u4E3A<code>argc</code> \uFF08 <em>\u53C2\u6570\u8BA1\u6570</em> \uFF09\u548C<code>argv</code> \uFF08 <em>\u53C2\u6570\u5411\u91CF</em> \uFF09\uFF0C\u4F46\u662F\u53EF\u4EE5\u7ED9\u5B83\u4EEC\u6307\u5B9A\u4EFB\u4F55\u6709\u6548\u7684\u6807\u8BC6\u7B26\uFF1A <code>int main(int num_args, char** arg_strings)</code>\u540C\u6837\u6709\u6548\u3002</p><p>\u5982\u679C\u60A8\u4E0D\u6253\u7B97\u5904\u7406\u547D\u4EE4\u884C\u53C2\u6570\uFF0C\u5219\u4E5F\u53EF\u4EE5\u5B8C\u5168\u7701\u7565\u5B83\u4EEC\uFF0C\u4EA7\u751F<code>int main()</code> \u3002</p><p>\u6570\u7EC4argv\u4E2D\u7684\u5143\u7D20\u652F\u6301\u4ECE\u5916\u754C\u4F20\u5165\u3002</p><h2 id="\u6848\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u6848\u4F8B" aria-hidden="true">#</a> \u6848\u4F8B</h2><h3 id="\u7B2C\u4E00\u6848\u4F8B-\u63A2\u7D22argv-0" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E00\u6848\u4F8B-\u63A2\u7D22argv-0" aria-hidden="true">#</a> \u7B2C\u4E00\u6848\u4F8B\uFF1A\u63A2\u7D22argv[0]</h3><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
using namespace std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span><span class="token operator">*</span> argv<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Have &quot;</span> <span class="token operator">&lt;&lt;</span> argc <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; arguments: &quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> argc<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> argv<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u8FD0\u884C\u7ED3\u679C</p><blockquote><p>Have 1 arguments: /Users/hanjiaming/project/cpp/untitled35/cmake-build-debug/untitled35</p></blockquote><p>\u6211\u4EEC\u53D1\u73B0\uFF0Cargv\u6570\u7EC4\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20\u662F \u8FD0\u884C\u8BE5\u7A0B\u5E8F\u7684\u5730\u5740\u3002</p><h3 id="\u7B2C\u4E8C\u6848\u4F8B-\u4ECE\u5916\u754C\u4F20\u5165\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E8C\u6848\u4F8B-\u4ECE\u5916\u754C\u4F20\u5165\u53C2\u6570" aria-hidden="true">#</a> \u7B2C\u4E8C\u6848\u4F8B\uFF1A\u4ECE\u5916\u754C\u4F20\u5165\u53C2\u6570</h3><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span><span class="token operator">*</span> argv<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Have &quot;</span> <span class="token operator">&lt;&lt;</span> argc <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; arguments:&quot;</span> <span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> argc<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> argv<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span> <span class="token comment">// // argv[i] is the argument at index i</span>
    <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u5728\u547D\u4EE4\u884C\u4E2D\u4F7F\u7528</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>./main a1 b2 c3
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u4F1A\u8F93\u51FA</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>Have <span class="token number">4</span> arguments<span class="token operator">:</span>
<span class="token punctuation">.</span><span class="token operator">/</span>test
a1
b2
c3
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="\u4ED6\u8A00" tabindex="-1"><a class="header-anchor" href="#\u4ED6\u8A00" aria-hidden="true">#</a> \u4ED6\u8A00</h2><p>Python \u4E5F\u6709\u7C7B\u4F3C\u7684\u529F\u80FD</p><img src="https://pic.hanjiaming.com.cn/2021/04/26/180110370b64d.png" alt="CleanShot 2021-04-26 at 23.07.22@2x.png" title="CleanShot 2021-04-26 at 23.07.22@2x.png"><p>\u5F15\u7528</p><ul><li>https://blog.csdn.net/xyw_blog/article/details/15686961</li><li>https://my.oschina.net/u/3797416/blog/3160121</li><li>https://www.runoob.com/python/python-command-line-arguments.html</li><li>https://blog.csdn.net/K346K346/article/details/49331965</li></ul>`,38);function p(t,c){return e}var r=n(s,[["render",p]]);export{r as default};
